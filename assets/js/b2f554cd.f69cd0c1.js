"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"zksync-handson","metadata":{"permalink":"/blog/zksync-handson","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2022-01-04-zksync-handson/index.mdx","source":"@site/blog/2022-01-04-zksync-handson/index.mdx","title":"Zksync handson","description":"Connect Sender","date":"2022-01-04T00:00:00.000Z","formattedDate":"January 4, 2022","tags":[],"readingTime":0.305,"truncated":true,"authors":[{"name":"Hyoungsung Kim","title":"Resarcher@KETI","url":"https://github.com/hyoungsungkim","imageURL":"https://github.com/hyoungsungkim.png","key":"HyoungsungKim"}],"frontMatter":{"slug":"zksync-handson","title":"Zksync handson","authors":"HyoungsungKim"},"nextItem":{"title":"Handing metamask on web","permalink":"/blog/Handing-metamask-on-web"}},"content":"\x3c!-- tags: [web3, dapp, ethereum, zksync] --\x3e\\n\\n\x3c!--import {ConnectButton, Deposit, Transfer, Withdraw} from \\"./components/baseComponents.tsx\\" --\x3e\\n\\nimport {ConnectButton, Deposit, Transfer, Withdraw} from \\"./components/baseComponents.tsx\\"\\n\\n# ZKsync handson\\n\\n## Connect Sender\\n<ConnectButton display=\\"Sender\\" className=\\"button button--primary\\"/>\\n\\n## Connect Receiver\\n<ConnectButton display=\\"Receiver\\" className=\\"button button--primary\\"/>\\n\\n\x3c!--truncate--\x3e\\n\\n## Deposit\\n<Deposit display=\\"Deposit\\" className=\\"button button--primary\\" />\\n\\n## Transfer\\n<Transfer display=\\"Transfer\\" className=\\"button button--primary\\" />\\n\\n## Withdraw\\n<Withdraw display=\\"Withdraw\\" className=\\"button button--primary\\" />"},{"id":"Handing-metamask-on-web","metadata":{"permalink":"/blog/Handing-metamask-on-web","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2022-01-03-web3-dapp-handson/index.mdx","source":"@site/blog/2022-01-03-web3-dapp-handson/index.mdx","title":"Handing metamask on web","description":"In this post, I present how to handle Metamask on the web with interactive examples using React components.","date":"2022-01-03T00:00:00.000Z","formattedDate":"January 3, 2022","tags":[{"label":"web3","permalink":"/blog/tags/web-3"},{"label":"dapp","permalink":"/blog/tags/dapp"},{"label":"ethereum","permalink":"/blog/tags/ethereum"}],"readingTime":4.055,"truncated":true,"authors":[{"name":"Hyoungsung Kim","title":"Resarcher@KETI","url":"https://github.com/hyoungsungkim","imageURL":"https://github.com/hyoungsungkim.png","key":"HyoungsungKim"}],"frontMatter":{"slug":"Handing-metamask-on-web","title":"Handing metamask on web","authors":"HyoungsungKim","tags":["web3","dapp","ethereum"]},"prevItem":{"title":"Zksync handson","permalink":"/blog/zksync-handson"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"import {Form, ConnectAccountButton, SendEthButton, ERC20Handler, ERC721Handler} from \\"./components/baseComponents.tsx\\"\\n\\n\\n\\n\\nIn this post, I present how to handle Metamask on the web with interactive examples using React components.\\nI hope it is helpful to someone.\\n\\nThe purposes of this post are as follows:\\n- Show how to attach Metamask on the web \\n- Show how to make a transaction using Metamask on the web\\n- Show how to deploy smart contract(minting coin) using Metamask on the web\\n\\nThis post is based on this [resource](https://docs.metamask.io/guide/create-dapp.html) of Metamask docs.\\n\\nFor all source code of this page, please visit [my github](https://github.com/HyoungsungKim/HyoungsungKim.github.io/tree/gh-pages/blog).\\n\\n\x3c!--truncate--\x3e\\n\\n## Dependincies\\n---\\n- [Metamask extension](https://metamask.io/download/)\\n- [Ethers.js](https://docs.ethers.io/v5/getting-started/#installing)\\n\\n\\n\\n## Connect Metamask on Web\\n---\\n- In this subchapter, we show how to Connect Metamask.  \\n\\nThe web clients do not want to let the host store their private key of the Ethereum wallet. Namely, the host must Connect Ethereum provider for their service.\\nThe Metamask is one of the most famous Ethereum providers, so I will present how to Connect the Metamask on the web as an Ethereum provider with interactive examples.\\n\\nThe Metamask provides how to [connect Metatmask and attach on the web](https://docs.metamask.io/guide/getting-started.html#basic-considerations). However, to fully utilize Metamask for smart contracts,\\nI will present how to connect using Etheres.js\\n\\nThe goal of this subchapter is to connect Metamask and show your address. If you clicked `Connect Metamask`, your Metamask would request connecting to this page.\\n\\n<ConnectAccountButton display=\\"Connect Metamask\\" className=\\"button button--primary\\" />\\n  \\nLet\'s begin generating `Connenct Metamask` components like the above example.\\n\\nFirst, we need to define connect class to connect Metamask using Etheres.js\\n\\n```typescript title=\\"connect.ts\\"\\nimport { ethers } from \'ethers\';\\n\\nexport class Connect {\\n    private provider: ethers.providers.Web3Provider;\\n    private signer: ethers.providers.JsonRpcSigner;\\n\\n    constructor(externalProvider: ethers.providers.ExternalProvider) {\\n        this.provider = new ethers.providers.Web3Provider(externalProvider);\\n        this.signer = this.provider.getSigner();\\n    }\\n\\n    getProvider(): ethers.providers.Web3Provider { \\n        return this.provider;\\n    }\\n\\n    getSigner(): ethers.providers.JsonRpcSigner {\\n        return this.signer\\n    }\\n}\\n```\\n\\nThere are two variables `provider` and `signer`. The `provider` denotes the Ethereum provider like Metamask.\\nIf a client connects their Ethereum provider, such as Metamask, to the web, a host can get a client\'s information as knonwn as `signer`.\\n\\n\\n```typescript title=\\"baseComponents.tsx\\"\\nimport { Connect } from \'../src/connect\';\\n\\ndeclare global {\\n    interface Window {\\n        ethereum: any;\\n    }\\n}\\n\\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\\n    display: string;\\n}\\n\\nlet connect: Connect;\\nlet provider: ethers.providers.Web3Provider;\\n\\nfunction ConnectAccountButton(props: ButtonProps): JSX.Element {\\n    let {display, onClick, ...htmlButtonProps}: ButtonProps = props;\\n    \\n    let userAccountComponent: HTMLSpanElement;\\n    let userAccount: string;\\n    \\n    const clickHandler = async () => {\\n        connect = new Connect(window.ethereum);\\n        provider = connect.getProvider();\\n\\n        await provider.send(\\"eth_requestAccounts\\", []);\\n        const signer = connect.getSigner();\\n        userAccount = await signer.getAddress();\\n        userAccountComponent = document.getElementById(\\"userAccount\\") as HTMLSpanElement;\\n        userAccountComponent.textContent = `User account: ${userAccount}`;\\n\\n        console.log(\\"Account:\\", userAccount);\\n    }\\n\\n    return (\\n        <div>\\n            <button {...htmlButtonProps} onClick={clickHandler}>{display}</button>\\n            <div>\\n                <span id=\\"userAccount\\">{`User account: `}</span>\\n            </div>\\n        </div>\\n    )\\n}\\n\\n```\\n(***I just defined `ButtonProps` to use the Button component easily in mdx file. Thus, you don\'t need to use it for your usage***)\\n\\nIn above code, we need to note the `clickHandler` callback function. By this function, we can connect Metamask on the web.\\n\\n```typescript\\nconnect = new Connect(window.ethereum);\\nprovider = connect.getProvider();\\n\\nawait provider.send(\\"eth_requestAccounts\\", []);\\n```\\n\\nWe need to initialize the `Connect` class first using `window.ethereum`. This process lets Ethers.js know which provider will be used for the Ethereum provider.\\n\\nWe have installed Metamask as a browser extension as dependencies, so `window.ethereum` denotes that Metamask will be used as Ethereum provider.\\n\\nAfter finishing connect, we can call Ethereum [JSON-RPC API](https://eth.wiki/json-rpc/API) and [Metamask API](https://docs.metamask.io/guide/rpc-api.html#ethereum-json-rpc-methods).\\n\\nThus, by using the `eth_requestAccounts`, we can request permission to connect your Metamask \\n\\nIf the provider succeeded in calling the `eth_requestAccounts` API, we would see the below popup, which requests permission.\\n\\n![connect](./img/connect.png)\\n\\nAfter connection, we can get an address of a client using signer, which is derived by the provider.\\n```typescript\\nconst signer = connect.getSigner();\\nuserAccount = await signer.getAddress();\\n```\\n\\nFinally, we succeeded in connecting Metamask on the web!\\n\\n## Send ETH to account\\n---\\n0.0001 ETH = 5AF3107A4000 WEI\\n\\n<SendEthButton display=\\"Send Ethereum\\" className=\\"button button--primary\\" />\\n\\n## Smart contract\\n---\\n\\n- ERC-20\\n- ERC-721\\n- ERC-1155\\n\\n### ERC-20\\n- Deploy smart contract to mint ERC20 token\\n- Send ERC20 token to other account\\n\\n#### Contract\\n```solidity title=\\"erc20.sol\\"\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\";\\n\\ncontract Minting is ERC20 {\\n    constructor(\\n        uint256 totalSupply_,\\n        string memory name_,\\n        string memory symbol_) ERC20(name_, symbol_) {\\n        _mint(msg.sender, totalSupply_);\\n    }\\n}\\n```\\n\\n<ERC20Handler className=\\"button button--primary\\" />\\n\\n### ERC-721\\n- Deploy smart contract\\n- Mint ERC721 token using metadata\\n\\n#### Contract\\n```solidity title=\\"erc721.sol\\"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\";\\nimport \\"@openzeppelin/contracts/utils/Counters.sol\\";\\n\\ncontract MyNFT is ERC721URIStorage {\\n    using Counters for Counters.Counter;\\n    Counters.Counter private _tokenIds;\\n\\n    constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol) {}\\n\\n    function mintNFT(address _to, string memory _tokenURI) public returns (uint256) {\\n        _tokenIds.increment();\\n\\n        uint256 newNFTId = _tokenIds.current();\\n        _mint(_to, newNFTId);\\n        _setTokenURI(newNFTId, _tokenURI);\\n\\n        emit Transfer(msg.sender, _to, newNFTId);\\n\\n        return newNFTId;\\n    }\\n    \\n    function tokenURI(uint256 tokenId) public view override (ERC721URIStorage) returns (string memory) {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function _burn(uint256 tokenId) internal override (ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n}\\n```\\n<ERC721Handler className=\\"button button--primary\\" />"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2021-08-26-reference/index.md","source":"@site/blog/2021-08-26-reference/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.405,"truncated":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"Handing metamask on web","permalink":"/blog/Handing-metamask-on-web"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2021-08-26-reference/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-26-reference/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.175,"truncated":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"Greetings!","permalink":"/blog/greetings"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"greetings","metadata":{"permalink":"/blog/greetings","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2021-08-26-reference/2021-02-28-greetings.md","source":"@site/blog/2021-08-26-reference/2021-02-28-greetings.md","title":"Greetings!","description":"Congratulations, you have made your first post!","date":"2021-02-28T00:00:00.000Z","formattedDate":"February 28, 2021","tags":[{"label":"greetings","permalink":"/blog/tags/greetings"}],"readingTime":0.1,"truncated":false,"authors":[{"name":"Joel Marcey","title":"Co-creator of Docusaurus 1","url":"https://github.com/JoelMarcey","image_url":"https://github.com/JoelMarcey.png","imageURL":"https://github.com/JoelMarcey.png"},{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","image_url":"https://github.com/slorber.png","imageURL":"https://github.com/slorber.png"}],"frontMatter":{"slug":"greetings","title":"Greetings!","authors":[{"name":"Joel Marcey","title":"Co-creator of Docusaurus 1","url":"https://github.com/JoelMarcey","image_url":"https://github.com/JoelMarcey.png","imageURL":"https://github.com/JoelMarcey.png"},{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","image_url":"https://github.com/slorber.png","imageURL":"https://github.com/slorber.png"}],"tags":["greetings"]},"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Congratulations, you have made your first post!\\n\\nFeel free to play around and edit this post as much you like."},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2021-08-26-reference/2019-05-29-long-blog-post.md","source":"@site/blog/2021-08-26-reference/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.05,"truncated":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"endi","tags":["hello","docusaurus"]},"prevItem":{"title":"Greetings!","permalink":"/blog/greetings"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/HyoungsungKim/HyoungsungKim.github.io/blog/2021-08-26-reference/2019-05-28-first-blog-post.md","source":"@site/blog/2021-08-26-reference/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/blog/tags/hola"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.12,"truncated":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"]},"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);